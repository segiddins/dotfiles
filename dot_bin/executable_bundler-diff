#!/usr/bin/env ruby

require 'rubygems'
require 'rubygems/package'
require 'bundler'
require 'set'
require 'open3'
require 'find'

def diff(spec:, full_name:, tar:, disk:)
  in_r, in_w = IO.pipe
  in_w.sync = true

  pid = spawn(
    "diff", "--color=auto", "--show-c-function", "-A", "patience", "-u", "--label", "tar:#{spec.full_name}:#{full_name}", "-", "--label", "disk:#{spec.full_name}:#{full_name}", disk,
     {in: in_r}
  )
  wait_thr = Process.detach(pid)
  begin
    if tar.respond_to? :readpartial
      IO.copy_stream(tar, in_w)
    else
      in_w.write tar
    end
  rescue Errno::EPIPE
  end
  in_w.close

  wait_thr.value
ensure
  in_w&.close
end

success = true

Bundler.load.specs.each do |spec|
  next unless ARGV.include?(spec.name) || ARGV.empty?
  next unless FileTest.file?(spec.cache_file)
  pkg = Gem::Package.new(spec.cache_file)
  pkg.gem.with_read_io do |io|
    reader = Gem::Package::TarReader.new io
  
      reader.each do |entry|
        next unless entry.full_name == "data.tar.gz"
        
        pkg.open_tar_gz entry do |pkg_tar|  
          seen = Set.new
          pkg_tar.each do |contents_entry|
            seen << contents_entry.full_name
            success = diff(spec:, full_name: contents_entry.full_name, tar: contents_entry, disk: File.join(spec.full_gem_path, contents_entry.full_name)) && success
          end
  
          Find.find(spec.full_gem_path) do |disk|
            next if FileTest.directory?(disk)
            full_name = disk.delete_prefix(spec.full_gem_path + '/')
            next if seen.include?(full_name)
            success = diff(spec:, full_name: , tar: "", disk:) && success
          end
        end
        
        break
      end
  end
end

exit success ? 0 : 1